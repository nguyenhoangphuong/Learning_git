package Shine

import com.excilys.ebi.gatling.core.Predef._

import Shine.Helper._

/** This object contains pre-defined info, configuration to run tests
  * as well as Shine-specific helpers
  */
object Predef {

	val apiKey = Map("api_key" -> "76801581")

	val apiUrl = Map("baseUrl" -> "https://misfit-shine-api-test-1663549078.us-east-1.elb.amazonaws.com",
		"smallUrl" -> "https://ec2-184-73-104-151.compute-1.amazonaws.com",
		"mediumUrl" -> "https://ec2-54-226-191-232.compute-1.amazonaws.com",
		"largeUrl" -> "https://ec2-23-22-9-220.compute-1.amazonaws.com",
		"localUrl" -> "http://10.0.1.123:9000",
		"signup" -> "/shine/v7/signup",
		"login" -> "/shine/v7/login",
		"logout" -> "/shine/v7/logout",
		"searchGraphItems" -> "/shine/v7/graph_items")

	val duration: Int = 180 // for each concurrency level

	val baseUrl: String = apiUrl("largeUrl")

	val rampUp: Int = 10

	val concurrencyLevels: List[String] = List("10",
		"50",
		"100",
		"200",
		"500",
		"1000")

	def configs(): List[Map[String, String]] = {
		var i: Int = 0
		var size: Int = concurrencyLevels.size
		var runs: List[Map[String, String]] = List()

		for (i <- 0 until size) {
			runs = runs :+ Map("users" -> concurrencyLevels(i),
				"duration" -> duration.toString(),
				"baseUrl" -> baseUrl,
				"rampUp" -> rampUp.toString())
		}

		return runs
	}

	val user = Map("email" -> "t20130618_141603@t.t",
		"password" -> "qwerty1",
		"udid" -> "2d37b0812fb99cb76648cc99fc427eb7fc1613ad")

	val newUser = new Feeder[String] {
		override def hasNext() = true

		override def next(): Map[String, String] = {
			var newEmail: String = "test@email.number" + randomNumericString()
			
			Map("email" -> newEmail,
			"password" -> "qwerty1",
			"udid" -> "2d37b0812fb99cb76648cc99fc427eb7fc1613ad")
		}
	}

	def newUserList(count: Int = 2): List[Map[String, String]] = {
		var list: List[Map[String, String]] = List()
		var i: Int = 0

		for (i <- 1 to count) {
			list = list :+ newUser.next()
		}

		return list
	}

	val newSyncLog = new Feeder[String] {
		override def hasNext() = true

		var counter = 0

		override def next(): Map[String, String] = {
			var min = 1340176292
			var max = 1363763492

			if (counter == max)
      			counter = min
    		counter += min

			var log = """{"log": { "startTime":"""
			log += counter
			log += """ ,      "endTime": """
			log += counter
			log += """,      "serialNumberString": "Test-SERIAL",      "log": "No log",      "data": {         "fileData": [            {"rawData}         ]     } }}"""

			Map("log" -> log)
		}
	}
	
}
